cluster_df
View(cluster_df)
View(nodes)
nodes <- left_join(nodes, cluster_df, by = "labels")
View(nodes)
visNetwork(nodes,edges)
library(visNetwork)
visNetwork(nodes,edges)
colnames(nodes)[3] <- "group"
View(nodes)
cluster_df
nodes$labels
View(nodes)
newGraph
nodes <- left_join(nodes, cluster_df, by = "id")
View(cluster_df)
nodes <- data.frame(id = V(storedGraph)$name, title = V(storedGraph)$name)
nodes <- nodes[order(nodes$id, decreasing = F),]
nodes
storedGraph
V(storedGraph)$name
V(storedGraph)
V(storedGraph)$name
colnames(storedGraph)
graphM30
colnames(graphM30)
transposeGraphM <- t(graphM)
graphM30 <- buildSNNGraph(transposeGraphM, k = 30)
plot(graphM30, vertex.size = 4, vertex.label = NA)
plot.igraph(graphM30)
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
storedGraph <- read.graph("D:/SPL3/GraphBased/graphSNN.txt", format="edgelist")
storedGraphUnDir <- as.undirected(storedGraph)
newGraph <- igraph::as_data_frame(storedGraphUnDir, what="edges")
newGraph1 <- igraph::as_data_frame(storedGraphUnDir, what="Vertices")
visNetwork(newGraph1, newGraph)
library(visNetwork)
visNetwork(newGraph1, newGraph)
visNetwork(newGraph1, newGraph)
IntercativeSNN <- InteractiveIGraph.Constructor(storedGraphUnDir)
library(igraph)
IntercativeSNN <- InteractiveIGraph.Constructor(storedGraphUnDir)
library(InteractiveGraph)
library(InteractiveIGraph)
install.packages("InteractiveIGraph")
library(InteractiveIGraph)
IntercativeSNN <- InteractiveIGraph.Constructor(storedGraphUnDir)
plot(IntercativeSNN)
IntercativeSNN
g = InteractiveIGraph(IntercativeSNN)
cdScFiltAnnotG <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
View(IntercativeSNN)
plotly(IntercativeSNN)
graphM30 <- buildSNNGraph(graphM, k = 30)
IntercativeSNN <- InteractiveIGraph.Constructor(graphM30)
plotly(IntercativeSNN)
structure(IntercativeSNN)
IntercativeSNN
plot.igraph(IntercativeSNN)
plot_ly(IntercativeSNN)
g = InteractiveIGraph(IntercativeSNN)
InteractiveIGraph(graphM30)
tkplot(IntercativeSNN)
tkplot(graphM30)
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
cdScFiltAnnot <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnot)
cdScFiltAnnotmain <- loadHDF5SummarizedExperiment(dir="D:\Semester 8/spl3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="")
cdScFiltAnnotmain <- loadHDF5SummarizedExperiment(dir="D:/Semester 8/spl3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnotmain$kmeansCluster10)
my.Kmeansclusters <- cdScFiltAnnotmain$kmeansCluster
cdScFiltAnnotmain <- loadHDF5SummarizedExperiment(dir="D:/Semester 8/spl3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="")
my.Kmeansclusters <- cdScFiltAnnotmain$kmeansCluster
marker.genes.cluster <- findMarkers(cdScFiltAnnotmain, groups=cdScFiltAnnotmain$kmeansCluster, pval.type="all")
for(i in c(1:max(my.Kmeansclusters))){
write.table(marker.genes.cluster[[i]], file=paste0("Ali_Agg_second_replicate_Cluster",i,".tsv"), sep="\t", quote=FALSE, col.names=NA)
}
for(i in c(1:max(as.factor(my.Kmeansclusters)))){
write.table(marker.genes.cluster[[i]], file=paste0("Ali_Agg_second_replicate_Cluster",i,".tsv"), sep="\t", quote=FALSE, col.names=NA)
}
my.Cluster <- cdScFiltAnnotmain$Clusters
for(i in c(1:max(as.factor(my.Cluster)))){
write.table(marker.genes.cluster[[i]], file=paste0("Ali_Agg_second_replicate_Cluster",i,".tsv"), sep="\t", quote=FALSE, col.names=NA)
}
for(i in c(1:max(as.numeric(my.Cluster)))){
write.table(marker.genes.cluster[[i]], file=paste0("Ali_Agg_second_replicate_Cluster",i,".tsv"), sep="\t", quote=FALSE, col.names=NA)
}
View(marker.genes.cluster)
marker.genes.clusterTest <- findMarkers(cdScFiltAnnotmain, groups=cdScFiltAnnotmain$kmeansCluster, pval.type="all")
View(marker.genes.clusterTest)
marker.genes.cluster.up <- findMarkers(cdScFiltAnnot, groups=cdScFiltAnnotmain$kmeansCluster, pval.type="all", lfc=0.5, direction="up")
for(i in c(1:max(as.numeric(my.Kmeansclusters)))){
write.table(marker.genes.cluster.up[[i]], file=paste0("Ali_Agg_second_replicate_Upregulated_LFC_0.5_Cluster",i,".tsv"), sep="\t", quote=FALSE, col.names=NA)
}
list(marker.genes.cluster.up)
list(marker.genes.cluster)
runApp('D:/SPL3/ClusteringBasedSingleCell')
View(df)
View(df)
cdScFiltAnnotmain <- loadHDF5SummarizedExperiment(dir="D:/Semester 8/spl3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnotmain)
View(cdScFiltAnnotmain)
View(cdScFiltAnnotmain)
shiny::runApp('D:/SPL3/ClusteringBasedSingleCell')
marker.genes.clusterTest
marker.genes.clusterTest <- findMarkers(cdScFiltAnnotmain, groups=cdScFiltAnnotmain$kmeansCluster, pval.type="all")
library(scran)
marker.genes.clusterTest <- findMarkers(cdScFiltAnnotmain, groups=cdScFiltAnnotmain$kmeansCluster, pval.type="all")
View(marker.genes.clusterTest)
cdScFiltAnnot <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnotmain)
View(marker.genes.clusterTest)
cdScFiltAnnot$kmeansClusterMarker <- cdScFiltAnnot$kmeansCluster
View(cdScFiltAnnot)
cdScFiltAnnotmain@metadata[["kmeansClusterMarker"]][[1]]
cdScFiltAnnotmain[["kmeansClusterMarker"]][[1]]
cdScFiltAnnot$kmeansClusterMarker
View(cdScFiltAnnot$kmeansCluster)
structure(cdScFiltAnnot)
metadata(cdScFiltAnnot)[['kmeansClusterMarker']] <- cdScFiltAnnot$kmeansCluster
structure(cdScFiltAnnot)
View(cdScFiltAnnot)
cdScFiltAnnot$kmeansClusterMarker <- list(cdScFiltAnnot$kmeansCluster)
View(cdScFiltAnnot)
metadata(cdScFiltAnnot)[['kmeansClusterMarker']] <-  list(cdScFiltAnnot$kmeansCluster)
View(cdScFiltAnnot)
cdScFiltAnnot@metadata[["Cluster"]][[1]]
View(newCL$membership)
View(cdScFiltAnnot)
my.clusters
list(my.clusters)
SimpleList(my.clusters)
list <- SimpleList(my.clusters)
View(list)
View(cdScFiltAnnot)
Structure(my.clusters)
View(my.clusters)
View(list)
(as.numeric(my.Kmeansclusters))
my.Kmeansclusters <- cdScFiltAnnotmain$kmeansCluster
(as.numeric(my.Kmeansclusters))
numeric <- (as.numeric(my.Kmeansclusters))
View(numeric)
my.Kmeansclusters
View(my.Kmeansclusters)
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
numeric <- list(as.numeric(my.Kmeansclusters))
numeric
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
as.factor(cdScFiltAnnotmain$kmeansCluster10[order(cdScFiltAnnotmain$kmeansCluster10)])
cdScFiltAnnotmain$kmeansCluster10[order(cdScFiltAnnotmain$kmeansCluster10)]
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
View(counts1)
View(counts2)
View(counts1)
View(counts2)
runApp()
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
View(counts1)
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
library(sp)
data(ralu.site)
library(sp)
data(ralu.site)
head(ralu.site)
library(sp)
data(ralu.site)
View(ralu.site)
library(sp)
dataTest <- data(ralu.site)
View(dataTest)
dataTest
library(sp)
dataTest <- data(ralu.site)
View(dataTest)
library(sp)
dataTest <- data(ralu.site)
View(dataTest)
library(sp)
dataTest <- data(ralu.site)
structure(dataTest)
library(sp)
library(GeNetIt)
install.packages("GeNetIt")
library(sp)
library(GeNetIt)
dataTest <- data(ralu.site)
structure(dataTest)
library(sp)
library(GeNetIt)
dataTest <- data(ralu.site)
View(dataTest)
library(sp)
library(GeNetIt)
cdScFiltAnnotK3 <- loadHDF5SummarizedExperiment(dir="D:/SPL3/GraphBased/cdScFiltAnnotHDF5", prefix="")
library(sp)
library(GeNetIt)
cdScFiltAnnotK3 <- loadHDF5SummarizedExperiment(dir="D:/SPL3/GraphBased/cdScFiltAnnotHDF5", prefix="")
knnData <- assay(cdScFiltAnnotK3)$logcounts
library(sp)
library(GeNetIt)
cdScFiltAnnotK3 <- loadHDF5SummarizedExperiment(dir="D:/SPL3/GraphBased/cdScFiltAnnotHDF5", prefix="")
knnData <- assays(cdScFiltAnnotK3)$logcounts
# Saturated spatial graph
sat.graph <- knn.graph(knnData, row.names=knnData@data[,"SiteName"])
# Saturated spatial graph
sat.graph <- knn.graph(knnData, k= 30)
co_KNN <- coordinates(knnData)
library(sp)
library(GeNetIt)
cdScFiltAnnotK3 <- loadHDF5SummarizedExperiment(dir="D:/SPL3/GraphBased/cdScFiltAnnotHDF5", prefix="")
knnData <- assays(cdScFiltAnnotK3)$logcounts
co_KNN <- coordinates(knnData)
View(graphMNNClust)
cdScFiltAnnotG <- loadHDF5SummarizedExperiment(dir="D:/SPL3/GraphBased/cdScFiltAnnotHDF5", prefix="")
graphMNNClust<-assays(cdScFiltAnnotG)$logcounts
graphMNNClust <- FindNeighbors(
graphMNNClust,
dims = 1:30,
features = NULL,
k.param = 10,
compute.SNN = TRUE,
prune.SNN = 1/15,
nn.method = "rann",
annoy.metric = "euclidean",
nn.eps = 0,
verbose = TRUE,
force.recalc = FALSE
)
graphMNNClust <- FindNeighbors(
graphMNNClust,
features = NULL,
k.param = 30,
compute.SNN = TRUE,
prune.SNN = 1/15,
nn.method = "rann",
annoy.metric = "euclidean",
nn.eps = 0,
verbose = TRUE,
force.recalc = FALSE
)
library(scran)
library(SummarizedExperiment)
library(scran)
library(scater)
require(graphics)
library(visNetwork)
library(geomnet)
library(igraph)
library(Seurat)
library(geomnet)
library(Seurat)
library(cowplot)
library(ggplot2)
library(pheatmap)
library(rafalib)
library(clustree)
library(plotly)
graphMNNClust <- FindNeighbors(
graphMNNClust,
features = NULL,
k.param = 30,
compute.SNN = TRUE,
prune.SNN = 1/15,
nn.method = "rann",
annoy.metric = "euclidean",
nn.eps = 0,
verbose = TRUE,
force.recalc = FALSE
)
View(graphMNNClust)
newGraph <- igraph::as_data_frame(graphMNNClust$snn, what="edges")
logCount<-assays(cdScFiltAnnotG)$logcounts
graphMNNClustNew <- FindNeighbors(logCount, dims = 1:30, k.param = 60, prune.SNN = 1/15)
View(graphMNNClustNew)
newGraph <- igraph::as_data_frame(graphMNNClustNew$snn, what="edges")
plot(graphMNNClustNew$nn)
View(graphMNNClustNew$nn)
Structure(graphMNNClustNew$nn)
library(dplyr)
Structure(graphMNNClustNew$nn)
structure(graphMNNClustNew$nn)
numEdges(graphMNNClustNew$nn)
View(graphMNNClustNew)
memory.size()
memory.limit()
memory.limit(size=56000)
plot(graphMNNClustNew$nn)
sparsity(graphMNNClustNew$nn)
View(graphMNNClustNew)
View(graphMNNClustNew)
pheatmap::pheatmap(graphMNNClustNew$nn[1:12022, 1:12022], col = c("white", "black"), border_color = "grey90",
legend = F, cluster_rows = F, cluster_cols = F, fontsize = 5)
memory.limit(size=8060)
pheatmap::pheatmap(graphMNNClustNew$nn[1:1200, 1:1200], col = c("white", "black"), border_color = "grey90",
legend = F, cluster_rows = F, cluster_cols = F, fontsize = 5)
transposed <- t(logCount)
graphMNNClustNew <- FindNeighbors(transposed, dims = 1:30, k.param = 60, prune.SNN = 1/15)
View(graphMNNClustNew)
View(graphMNNClustNew)
plot(graphMNNClustNew$nn)
View(graphMNNClustNew)
pheatmap::pheatmap(graphMNNClustNew$nn[1:1741, 1:1741], col = c("white", "black"), border_color = "grey90",
legend = F, cluster_rows = F, cluster_cols = F, fontsize = 5)
pheatmap(graphMNNClustNew$nn)
pheatmap::pheatmap(graphMNNClustNew$nn, border_color = "grey90",
legend = F, cluster_rows = F, cluster_cols = F, fontsize = 5)
pheatmap::pheatmap(graphMNNClustNew$nn, border_color = "grey90",
cluster_rows = F, cluster_cols = F, fontsize = 5)
View(graphMNNClustNew$nn)
View(graphMNNClustNew$nn[100:100])
View(graphMNNClustNew$nn[1:100,1:100])
graphMNNClustNew$nn[1:100,1:100]
plot(graphMNNClustNew$snn)
shiny::runApp('D:/SPL3/ClusteringBasedSingleCell')
runApp('D:/SPL3/ClusteringBasedSingleCell')
dbs <- listEnrichrDbs()
library(enrichR)
install.packages("enrichR")
dbs <- listEnrichrDbs()
library(enrichR)
dbs <- listEnrichrDbs()
View(dbs)
dbsSel <- c("GO_Molecular_Function_2018", "GO_Cellular_Component_2018", "GO_Biological_Process_2018", "Enrichr_Submissions_TF-Gene_Coocurrence",
"RNA-Seq_Disease_Gene_and_Drug_Signatures_from_GEO", "KEGG_2015", "MGI_Mammalian_Phenotype_2013", "Human_Gene_Atlas","Mouse_Gene_Atlas")
cdScFiltAnnot <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
resEnrichClust <- list()
for(i in 1:max(as.numeric(cdScFiltAnnot$kmeansCluster))){
resEnrich <- enrichr(rownames(marker.genes.cluster.up[[i]][marker.genes.cluster.up[[i]]$FDR<=0.01,]), databases = dbsSel)
resEnrichTemp <- lapply(resEnrich, FDRsubsetting <- function(x){
x <- x[x$Adjusted.P.value<0.1,c(1:4)]
return(x)
})
resEnrichClust[[i]] <- resEnrichTemp
}
marker.genes.cluster.up <- findMarkers(cdScFiltAnnot, groups=cdScFiltAnnot$kmeansCluster, pval.type="all", lfc=0.5, direction="up")
library(scran)
marker.genes.cluster.up <- findMarkers(cdScFiltAnnot, groups=cdScFiltAnnot$kmeansCluster, pval.type="all", lfc=0.5, direction="up")
resEnrichClust <- list()
for(i in 1:max(as.numeric(cdScFiltAnnot$kmeansCluster))){
resEnrich <- enrichr(rownames(marker.genes.cluster.up[[i]][marker.genes.cluster.up[[i]]$FDR<=0.01,]), databases = dbsSel)
resEnrichTemp <- lapply(resEnrich, FDRsubsetting <- function(x){
x <- x[x$Adjusted.P.value<0.1,c(1:4)]
return(x)
})
resEnrichClust[[i]] <- resEnrichTemp
}
View(cdScFiltAnnot)
test <- metadata(cdScFiltAnnot)[['Cluster']][[1]][[PercentClust1]][rownames(cdScFiltAnnot),'FDR']
test <- metadata(cdScFiltAnnot)[['Cluster']][[1]][[1]][rownames(cdScFiltAnnot),'FDR']
test
View(cdScFiltAnnot)
vec <- c(1,2,3)
char_vec <- c("Hadoop", "Spark", "Flink", "Mahout")
logic_vec <- c(TRUE, FALSE, TRUE, FALSE)
out_list <- list(vec, char_vec, logic_vec)
out_list
out_list
View(out_list)
vec
vec[1] <- out_list
vec[[1]] <- out_list
View(vec)
View(cdScFiltAnnot)
cdScFiltAnnot <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
library(scran)
library(enrichR)
cdScFiltAnnot <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
library(HDF5Array)
cdScFiltAnnot <- loadHDF5SummarizedExperiment(dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnot)
cdScFiltAnnotmain <- loadHDF5SummarizedExperiment(dir="D:/Semester 8/spl3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnotmain)
structure(cdScFiltAnnotmain)
View(cdScFiltAnnotmain$kmeansCluster)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- SimpleList(cdScFiltAnnotmain$kmeansCluster)
View(cdScFiltAnnot)
marker.genes.cluster.up <- findMarkers(cdScFiltAnnot, groups=cdScFiltAnnot$kmeansCluster, pval.type="all", lfc=0.5, direction="up")
metadata(cdScFiltAnnot)[['kmeansCluster.res10']]
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- SimpleList(marker.genes.cluster.up, metadata(cdScFiltAnnot)[['kmeansCluster.res10']])
View(cdScFiltAnnot)
View(vec)
View(cdScFiltAnnot)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- List(marker.genes.cluster.up, metadata(cdScFiltAnnot)[['kmeansCluster.res10']])
View(cdScFiltAnnot)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- NA
View(cdScFiltAnnot)
cdScFiltAnnotmain$kmeansCluster
List(cdScFiltAnnotmain$kmeansCluster)
View(List(cdScFiltAnnotmain$kmeansCluster))
View(SimpleList(cdScFiltAnnotmain$kmeansCluster))
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- SimpleList(cdScFiltAnnotmain$kmeansCluster)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']][[1]]
SimpleList(marker.genes.cluster.up)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']][[1]] <- SimpleList(marker.genes.cluster.up)
View(cdScFiltAnnot)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']][[1]] <- NA
View(cdScFiltAnnot)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']]
View(metadata(cdScFiltAnnot)[['kmeansCluster.res10']])
View(metadata(cdScFiltAnnot)[['kmeansCluster.res10']])
metadata(cdScFiltAnnot)[['kmeansCluster.res10']]
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- NA
View(cdScFiltAnnot)
tempCluster <- cdScFiltAnnotmain$kmeansCluster
tempCluster
list(tempCluster)
View(list(tempCluster))
View(cdScFiltAnnot)
View(list(tempCluster))
View(list(SimpleList(tempCluster)))
View(cdScFiltAnnot)
SimpleList(marker.genes.cluster.up)
tempCluster <- SimpleList(marker.genes.cluster.up)
View(tempCluster)
View(cdScFiltAnnot)
View(tempCluster)
marker_gene <- (marker.genes.cluster.up)
View(marker_gene)
marker_gene <- list(marker.genes.cluster.up)
View(marker_gene)
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
View(df)
metadata(cdScFiltAnnot)[['kmeansCluster.res10']] <- list(marker.genes.cluster.up)
View(cdScFiltAnnot)
saveHDF5SummarizedExperiment(cdScFiltAnnot, dir="cdScFiltAnnotHDF5", prefix="", replace = TRUE,
chunkdim=NULL, level=NULL, verbose=FALSE)
saveHDF5SummarizedExperiment(cdScFiltAnnot, dir="C:/Users/hee yaa/Documents/cdScFiltAnnotHDF5", prefix="", replace = TRUE,
chunkdim=NULL, level=NULL, verbose=FALSE)
saveHDF5SummarizedExperiment(cdScFiltAnnot, dir="D:/SPL3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="", replace = TRUE,
chunkdim=NULL, level=NULL, verbose=FALSE)
cdScFiltAnnotK3 <- loadHDF5SummarizedExperiment(dir="D:/SPL3/GraphBased/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnotK3)
saveHDF5SummarizedExperiment(cdScFiltAnnotK3, dir="cdScFiltAnnotHDF5", prefix="", replace = TRUE,
chunkdim=NULL, level=NULL, verbose=FALSE)
View(cdScFiltAnnotK3)
View(cdScFiltAnnotmain)
saveHDF5SummarizedExperiment(cdScFiltAnnotmain, dir="cdScFiltAnnotHDF5", prefix="", replace = TRUE,
chunkdim=NULL, level=NULL, verbose=FALSE)
View(cdScFiltAnnot)
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
getwd()
saveHDF5SummarizedExperiment(cdScFiltAnnotmain, dir="cdScFiltAnnotHDF5", prefix="", replace = TRUE,
chunkdim=NULL, level=NULL, verbose=FALSE)
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
View(marker.genes.cluster.up)
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
View(marker.genes.cluster.up)
getwd()
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
View(marker_gene)
View(cdScFiltAnnotmain)
runApp('D:/SPL3/ClusteringBasedSingleCell')
runApp('D:/SPL3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/SPL3/ClusteringBasedSingleCell')
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
cdScFiltAnnotmain <- loadHDF5SummarizedExperiment(dir="D:/Semester 8/spl3/ClusteringBasedSingleCell/cdScFiltAnnotHDF5", prefix="")
View(cdScFiltAnnotmain)
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
shiny::runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
getwd()
runApp('D:/Semester 8/spl3/ClusteringBasedSingleCell')
